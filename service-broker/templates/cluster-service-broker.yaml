{{- $caCert := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU4akNDQXRxZ0F3SUJBZ0lVUldHNjNPNUZVaGxHWHBabmUxZUVLeldCcWdZd0RRWUpLb1pJaHZjTkFRRU4KQlFBd0VURVBNQTBHQTFVRUF4TUdVME5HSUVOQk1CNFhEVEU1TURNeU5qRTRNemd3TUZvWERUUTVNRE14T0RFNApNemd3TUZvd0VURVBNQTBHQTFVRUF4TUdVME5HSUVOQk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBCk1JSUNDZ0tDQWdFQXdjTEtPSWRQZFMrSERVbHNzWjZRdFRFV2wvVk1pZzhDaHRDTERPQU9mQjJyNXRTNFMvdU4KdUMwZzRZNVREWXdwYXRENVRkdUpYVk9GazQ5c2ZaM2NGOGpFMHRGQi96bmFrdW54OG1mYVhFS3dWM1R1VzRoTwpaSUZVRHNZMFV5WExpaVBDcDVWRVowSEJzL3YxNzNlUUJidllRMExLbUhXd0ozWWZ6bERlTGVyQVJYM2prYzBCCkxoMkFjMkp5dDU5TFdDTlVDV0tFT0NQM1pNczh4NTZncmdVWHhva3E4T1RyV2o5dDRIVkdCVVBpbkMwd2h3OWgKbmY1VjZVZFVEV2tTalhDOGl1bUdnQjRYY1Nac1hGeWpUOG5uY3dXL285TkhUVlNVVWNFRUpFaHNURzdZOGV2Zwovc3hEN09ObXk0VzdTbXFOZG01bGFacHl3QUN0NlVxRXB2ZFpDNS9BZ0lORkZWVCtBOEhaZnlwd25Kc3RxUTA4ClJUSzdUZ2grSzBhZlZWVnlmaUovYnlLcHlFYzI0Nk1qS05BQTN3V29pN0ZqRWxFakNzR0dyeHFHNXROS0o5S0UKcDRWbk9nSmFSSlVaempnRjgzVFc5SUgwSDdhVDhxWnJGZEx2S1gzUW1uU3l4MkJaaEU2czlIQWxyblJ4cHlFcgpQUS9kdW91aFh6UXJkTlU5NzFxM0VlYjN0VUhGM3FnTjhLWXI4NzJ5TFpjQjEwcnlieCsySUlXem01OVJhbzRvClJMYWRiV0FPUEVJZlZucVFtSUM2aEp2aU8wRmMyd3pHaFZMbkJzdU51MGVzY2M3ekZYcDQvbnhjVStLYTkxeTgKcWhDOWVOc0l5b1ZDK3FmTE5LV2lVWG9GWWNLelRVdzlBZjNPekE4NnBxTUZDR1lBc1k1NXZMa0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSTIzCkhsUTRZVlpIUXlKVkJ0TDBQOGN6MFRrUE1BMEdDU3FHU0liM0RRRUJEUVVBQTRJQ0FRQUw5cktNZkxqRWMrcU4KTG9QTFRuUFNHbmVwR3daVnJPQXpmWkNkRllOTXhSUEdyWUx3UXZ3am92aUJZS1VwMTJSaE9QalNJaTFhRXdLRwpaUDJWSnhDMG1qN0JQcW9JY08xZ2hhbnpiWGh6aDdTNXFYcGJSbElZN2RRL2E4ZEd3UHdsQUZibmlPWG1EWW9jCmgwbEdIZmxCS1dwRWVraG5Tb1M1cFludGx3dWNRREppUmZjRFZFUkJaT1pGYkd6OVFoLzlYV2g2eUJ5NHRlQksKdDcwbGxNQm5tempkbW9VZ2tLNXNIMXd2RTVqRXlEWnJWdEJJZWYvRC81WVhtdzBwVk83Z0wrS2J0elFnenBkYQpwSWZ6djYwSjdqb1ZobjkxU2JTTmM5aFlWTWVsRllKbk42MzJkcWhBWnU5WGRzdC9CWjBWYmFON2g0MThWK3U0CnRDMVd5YTQ1UFRSdmFrZ2dUb0wwWWV5Mk5WeTFWV2RHNnVaamlWSE45azI2ZENpWCszZUlOSFZHQUJiVWZaamoKVEF3WWF6V1pIYjlCb2UyR2hmUFI1OTczc0pheU5VQ05RNHgvaGt0dXBwV2t3aG02aUNTQWJhdDlKRjRRazRSeQpLZ3V3MkVMejI4VjNlaUQyMldUa0tEbnNJdmlqOG5KeUdGS3QxOWE3QWMyNWxMaThWTHlobFpPTUM0cU85aG5jCms1RjR2azR0RlJEcVl0YkRZMWxVbm5mbjlwekkxN25NSEl2TmpEQkc4M1lnRzRFY1ExWDU1a3NpYkFiY28xUmoKcFZTYk5RV0Jwc0FCY1VsMmRDTi9mdWt5UTNLMDl2ZXJscCtDYmxRc1E3L2NOMm9RQ3YwZElmT1FXczF2Z0ZHcQpBcWRPdUJLRVRoMkpwaUFHdk5KdDNlWkxiUGtyUEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgo=" -}}

{{- $tlsCert := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVZRENDQWtpZ0F3SUJBZ0lKQU16dG1LMlZ4RzBoTUEwR0NTcUdTSWIzRFFFQkN3VUFNQkV4RHpBTkJnTlYKQkFNVEJsTkRSaUJEUVRBZUZ3MHhPVEF6TWpjeE56UTVNRFphRncweU9UQXpNalF4TnpRNU1EWmFNRHd4Q3pBSgpCZ05WQkFZVEFrTkJNUXN3Q1FZRFZRUUlEQUpDUXpFTk1Bc0dBMVVFQ2d3RVUxVlRSVEVSTUE4R0ExVUVBd3dJClkyOXRMbk4xYzJVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURIWll4QXB2b2UKdnljUXUya0ZHbURxTllpaFlBazMzZ0NXaklBaCt5bnFNYXJzdlYrZms0WjBGRnhQcTV2bytXbngrQXY2aFlLUwovR2dmUVR0eGxwVnpNZHY4OGJWYkRQbGJOMlZkd29HSmRMRmtMSGR4cE90YlV0TEV5MElvcEduME11bVBtS2NyCk1TV1ZjdFNmQzVkcTRFRGVwZXJTbS9vdDRPZGwwMGh0anJqU24yS0hHY1lJbDhteUducXBRL1dleUc5SGpwaVYKYU1SR3pQczlTSXlyWjc3WFA4OUZMUUh3Y2NmYm8yZ01FUGpJbm1ibFQ0OHJmcTNVOU5iMDdQeitzcFFOVnNWQQpacGZmemk5V0o2aTdzL3d1L0ZBVk5aTzErbTFNdHlUSEJQVU1mMHBZWnlrUFNzRzlOSHNPNlluOVN0UiszcVFnCnVXV1lQZm1qSXR2N0FnTUJBQUdqZ1k4d2dZd3dId1lEVlIwakJCZ3dGb0FVamJjZVZEaGhWa2RESWxVRzB2US8KeHpQUk9ROHdDUVlEVlIwVEJBSXdBREFMQmdOVkhROEVCQU1DQlBBd1VRWURWUjBSQkVvd1NJSWdZWEJ3YzJOdgpaR1V0YzJWeWRtbGpaUzFpY205clpYSXVZWEJ3YzJOdlpHV0NKR0Z3Y0hOamIyUmxMWE5sY25acFkyVXRZbkp2CmEyVnlMbUZ3Y0hOamIyUmxMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQXR1a3prMEUrS0Z4QmhrMDUKakg1ODI0Uy9tL0lmd2ZVZXhYdzRFcGRlOUR3cnFBSitDazAwTEZCTlFhOXVGN28vYkRiOG9PRVh4dWhOdnRwTQpNb3F5aVB1TG91YUFjd1dIeThOTU5RRnp5NVMrd2Y4d2hsQUJJRTluclVMcEkrWDR6azB4Y1l1WjM1NTJzemxzCjY3alZSNncrUE80WlFnUmsyYlVmZDVIdmd2bWExWkFBZkUxMUhRWmJtdnpTa3JwbVQyOUpFVWJSVnFRSWl6QTQKWFZRVlBIUVBQKzVLNFhscVpKSWhKS3RyYTBIR0Y0eHdqOWlnaWNEUXQ5UFhRdk5EQzJLNXBmQlJwTWNaN2NaVAovWncvUyt2enJMdGFiMDNMb2VBVUZuQmo5dXZLK1BUMnFDaTU5YXM4bVNCT01TS1A3MXFNbG9sb2RER1c2K2doCkh3aTcrb21MTEN6VC9PSVBTRDFKbnREYkovbThFTGVjZEpMbGRxMSsvbHVCSFQ4dHhMZkhwdnRjdmFHZWJXU2oKMjMxK0YreTlPSWtTREpTdDF0bzBGRGwrT09oQ1QrRE5TQUFLM1p1MmQ2b05lWnI1b1VOZHdTY3BSZW8vN3g5Ngo1OHRSNEUvSWY4UkYwQU1wR2tESFNvVkRZUi9FSWxGTkcxRXIrMjQrc2lIRWhlM3ZmWU5uRWlsM2hDd3FES3YwCk5UbS94Z3hRTS9mNXI3Y1I1RTZLK2o2dVV4OWIvSDhISDZPNW4zQmFUaUZnOFd5K2NxRzZoLzRSTUxyQmd2SzEKRzlkYVo1Y000Z3pOaHpmSXI3Z0djV2QxK0FsR3Q4K042TFMveU8rbSs3QnQ2K3R2UlNZNGFoYUtOU1E0alJ0OQpYT1JxY01FSFFwZWV2dXFBMURtdFlINDRuTGM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K" -}}

{{- $tlsKey := "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDJXTVFLYjZIcjhuRUx0cEJScGc2aldJb1dBSk45NEFsb3lBSWZzcDZqR3E3TDFmCm41T0dkQlJjVDZ1YjZQbHA4ZmdMK29XQ2t2eG9IMEU3Y1phVmN6SGIvUEcxV3d6NVd6ZGxYY0tCaVhTeFpDeDMKY2FUclcxTFN4TXRDS0tScDlETHBqNWluS3pFbGxYTFVud3VYYXVCQTNxWHEwcHY2TGVEblpkTkliWTY0MHA5aQpoeG5HQ0pmSnNocDZxVVAxbnNodlI0NllsV2pFUnN6N1BVaU1xMmUrMXovUFJTMEI4SEhIMjZOb0RCRDR5SjVtCjVVK1BLMzZ0MVBUVzlPejgvcktVRFZiRlFHYVgzODR2Vmllb3U3UDhMdnhRRlRXVHRmcHRUTGNreHdUMURIOUsKV0djcEQwckJ2VFI3RHVtSi9VclVmdDZrSUxsbG1EMzVveUxiK3dJREFRQUJBb0lCQVFDK21ENTcvaC9QREFDWAphY3gwNkVZREdiREVNRHdmZnNFcEpwdkQzNFN0SzFTcWZrbk5Dd0xXS2pBaXAzS2NPdXdlTW0rZ3c4V1FJbHlVCm81SGlmWUhWWHE5ZEZOMjVicWxibTVQMUQxc3F2TFJqZ0cyYjMzeHBDcjRWQmdUelBGVmE2dDkrTnZoenZNS2sKRytOSk01ZEV2WjdFTSt4RjdIb3pLR3VIVlhKQjVSMHAzU3dZU3hsWG9WN29xcUc5SXU1SVFEUlJvMTJHSCt6Zgp6OU9pdDgrTVQxQUJ0Z3BmdmxVcjg0ZkExZE5DUVNaSitKd3JUTC91elBBcExSdG5SZUhHaE82cEthemYvVE5JCnJoK3lvTENzNURGbkhQMjVQalhPOEQ2TUxoMkdXMHcxcmJuenpSNk84d0ZiTnNObVlMc1BBQ1NRcWhwV1BJdXgKNU9LZm0rWEJBb0dCQVBXKzRVNjJidllLWW9EaTg2Q20zVW5lMjJMYnUydUs5T2xhN0xVWjhPeXl4c0R4aVZDUApuRGh6UHk1MEo5UWp0aHBxdENmdmt2RWlEL3Bndmo3RzFxK1N0MXhjekhGRU94QkZPM0JGVnltV0dhS0Ztb1RHCjJmT3N3YitDZ2NRVEZuV0tCUVdDYnhFQUVGK1g5TC9wc1RjZHFlSDMrcXRxS3lpMEl2UGhwSE5aQW9HQkFNKzMKamxKZDFtYkczVjBKb2ZaZkNIUDJoMmVYOGVrVlFHYW1wWDZyYllVTVhSSkxHZENoT2xQWitnSnBYMWpsbzhtVAo4YlVja21vS2Zjcjc2bFlmZDk2VFhXdm9XR29VRjdSZVpZZmt5c3R0eExvWGJwOWtCRjlNd1k2WmJhYTJXUGUzCmR1dGR0b0M1ak81ZkphNCtVOVFvWithQ1Vhalg4SHpnZ2Nvd0VRTnpBb0dBVDEzY2luMWxETldCeHJxRmtJY1QKeFAzU3dQVFNiUU10NGdmWmx3dlB3Y0pqYW9FWHBnc2JteWV0YWlWZGo2Z1E4aXN3RUEzUjJVcjAraG93bHpuRQpzR09rRUpKdi9NemFmb0M5bDU3dGJhTHFtSkNwdk9RMEUvemhmaVo2SG9kRG82WjF4TGZCZ3k0UUc2K0ova2xOClVNMmx4ak0rcEFuZjhuOXJJblRubGRFQ2dZQjNlM3lRZ0kzTnZPS2ttOS9nV2pZQWpuVEE4RFFsQVNaMFpiT1kKczM5aUl3UitlMWkwRzZuemhkVThBZVRvdTkrRkdtYlU2VVNIWHRXUkoydGFjdXQreW9IWWltUWhVTUY1N1RxMQorck4wWlFYZWpaQUNlNFBRVmRTWTlFU1F1eDllRHRpRzl2YitBTDNDZUZTeWNBUEViQ0dvQkpwNFp3NWNwci9CCnovaFpaUUtCZ0Q1OXQ4WG1PNjRDUEdNTnI2YlV0T054eUs3ZGNUM2k2bXpTS2QzV0FpckJEL2M2aEFQZmZ2ZmoKVk5MU3JkUms3ajQzUVQ5bTdWZVd2L2hUalZYRzFvWlAwVFNVb09mN0MrMCtMc0liR1FqaDFhd1N1Rlp1cXV6WAo5S0NtbHVIN0RNVlVneTE5ZmdvRDZKMnhnZ2xnQmhGQVA1ZTZ5V1FYSjRwV2hqVlB1OElOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==" -}}

{{ if .Values.catalog.controller.enabled }}
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ClusterServiceBroker
metadata:
  name: {{ template "service-broker.fullname" . }}
  labels:
    {{- include "service-broker.labels" . | nindent 4 }}
spec:
  url: https://{{ template "service-broker.fullname" . }}.{{ .Release.Namespace }}.svc
  caBundle: {{ $caCert }}
  authInfo:
    bearer:
      secretRef:
        name: {{ template "service-broker.fullname" . }}-accessor-token
        namespace: {{ .Values.catalog.controller.serviceAccount.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "service-broker.fullname" . }}-accessor
  labels:
    {{- include "service-broker.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: servicecatalog.k8s.io:broker-accessor
subjects:
  - kind: ServiceAccount
    name: {{ .Values.catalog.controller.serviceAccount.name }}
    namespace: {{ .Values.catalog.controller.serviceAccount.namespace }}
---
kind: Secret
apiVersion: v1
metadata:
  name: {{ template "service-broker.fullname" . }}-accessor-token
  namespace: {{ .Values.catalog.controller.serviceAccount.namespace }}
  labels:
    {{- include "service-broker.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/service-account.name: {{ .Values.catalog.controller.serviceAccount.name }}
type: kubernetes.io/service-account-token
{{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "service-broker.fullname" . }}-apiserver-cert
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "service-broker.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $tlsCert }}
  tls.key: {{ $tlsKey }}
  ca.crt: {{ $caCert }}
---
{{ $promNamespace:= default .Release.Namespace .Values.monitoring.prometheus.namespace }}
{{- if (and (ne $promNamespace .Release.Namespace) .Values.monitoring.enabled) }}
# if operator monitoring is enabled and prometheus namespace is different than operator
# create the above secret in prometheus namespace too.
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "service-broker.fullname" . }}-apiserver-cert
  namespace: {{ $promNamespace }}
  labels:
    {{- include "service-broker.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $tlsCert }}
  tls.key: {{ $tlsKey }}
---
{{- end }}
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "service-broker.fullname" . }}-extension-server-authentication-reader
  namespace: kube-system
  labels:
    {{- include "service-broker.labels" . | nindent 4 }}
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: {{ template "service-broker.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
---
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "service-broker.fullname" . }}-auth-delegator
  labels:
    {{- include "service-broker.labels" . | nindent 4 }}
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: {{ template "service-broker.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
